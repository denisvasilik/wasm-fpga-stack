CALL $MAIN
FINISH

DEFINE_VAR WB_ADDRESS #x0
DEFINE_VAR WB_VALUE #x0
DEFINE_VAR WB_EXPECTED_VALUE #x0

MAIN:
BEGIN_SUB
    MESSAGE 0 "TESTBENCH: WASM_FPGA_STACK"

    CALL $Rst_STACKBLK_Test
    CALL $RdBk_STACKBLK_Test
    CALL $TEST_STACK_OPERATION_32_BIT
    CALL $TEST_STACK_OPERATION_64_BIT
    CALL $TEST_MULTIPLE_STACK_OPERATIONS_32_BIT
    CALL $TEST_MULTIPLE_STACK_OPERATIONS_64_BIT
    CALL $TEST_LOCAL_GET_32_BIT
    CALL $TEST_LOCAL_GET_64_BIT
    CALL $TEST_LOCAL_SET_32_BIT
    CALL $TEST_LOCAL_SET_64_BIT

    RETURN_CALL
END_SUB

TEST_MULTIPLE_STACK_OPERATIONS_32_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_MULTIPLE_STACK_OPERATIONS_32_BIT"

    -- Push 32 Bit Value onto Stack
    WRITE_FPGA 32 $STACKBLK_ADR_LowValueReg #xAA55AA55
    WRITE_FPGA 32 $STACKBLK_ADR_HighValueReg #x0
    WRITE_FPGA 32 $STACKBLK_ADR_TypeReg $STACKBLK_VAL_i32

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Push
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    -- Push 32 Bit Value onto Stack
    WRITE_FPGA 32 $STACKBLK_ADR_LowValueReg #x55AA55AA
    WRITE_FPGA 32 $STACKBLK_ADR_HighValueReg #x0
    WRITE_FPGA 32 $STACKBLK_ADR_TypeReg $STACKBLK_VAL_i32

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Push
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    -- Pop 32 Bit Value from Stack
    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Pop
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #x55AA55AA #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #x0 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF

    -- Pop 32 Bit Value from Stack
    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Pop
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #xAA55AA55 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #x0 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF

    RETURN_CALL
END_SUB

TEST_STACK_OPERATION_32_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_STACK_OPERATION_32_BIT"

    WRITE_FPGA 32 $STACKBLK_ADR_LowValueReg #xAA55AA55
    WRITE_FPGA 32 $STACKBLK_ADR_HighValueReg #x0
    WRITE_FPGA 32 $STACKBLK_ADR_TypeReg $STACKBLK_VAL_i32

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Push
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Pop
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #xAA55AA55 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #x0 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF

    RETURN_CALL
END_SUB

TEST_STACK_OPERATION_64_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_STACK_OPERATION_64_BIT"

    -- Push 64 Bit Value onto Stack
    WRITE_FPGA 32 $STACKBLK_ADR_LowValueReg #xAA55AA55
    WRITE_FPGA 32 $STACKBLK_ADR_HighValueReg #xBB44BB44
    WRITE_FPGA 32 $STACKBLK_ADR_TypeReg $STACKBLK_VAL_i64

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Push
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WAIT_NS 10
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Pop 64 Bit Value from Stack
    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Pop
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xF
    WAIT_NS 10
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    -- Assert
    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #xAA55AA55 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #xBB44BB44 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i64 #xFFFFFFFF

    RETURN_CALL
END_SUB

TEST_MULTIPLE_STACK_OPERATIONS_64_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_MULTIPLE_STACK_OPERATIONS_64_BIT"

    -- Push 64 Bit Value onto Stack
    WRITE_FPGA 32 $STACKBLK_ADR_LowValueReg #xAA55AA55
    WRITE_FPGA 32 $STACKBLK_ADR_HighValueReg #xBB44BB44
    WRITE_FPGA 32 $STACKBLK_ADR_TypeReg $STACKBLK_VAL_i64

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Push
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    WAIT_NS 100

    -- Push 64 Bit Value onto Stack
    WRITE_FPGA 32 $STACKBLK_ADR_LowValueReg #xF0F0F0F0
    WRITE_FPGA 32 $STACKBLK_ADR_HighValueReg #xF0F0F0F0
    WRITE_FPGA 32 $STACKBLK_ADR_TypeReg $STACKBLK_VAL_i64

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Push
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0
    WAIT_NS 1000

    -- Pop 64 Bit Value from Stack
    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Pop
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    -- Assert
    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #xF0F0F0F0 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #xF0F0F0F0 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i64 #xFFFFFFFF

    -- Pop 64 Bit Value from Stack
    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_Pop
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 100

    -- Assert
    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #xAA55AA55 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #xBB44BB44 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i64 #xFFFFFFFF

    RETURN_CALL
END_SUB

TEST_LOCAL_GET_32_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_LOCAL_GET_32_BIT"

    -- Current Activation Frame
    WRITE_RAM 32 #x0 #x0 -- ModuleInstanceUid
    -- Local 0
    WRITE_RAM 32 #x1 #x11223344 -- LowValue
    WRITE_RAM 32 #x2 #x0 -- HighValue
    WRITE_RAM 32 #x3 $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #x4 #x0 -- Reserved
    -- Local 1
    WRITE_RAM 32 #x5 #x44556677 -- LowValue
    WRITE_RAM 32 #x6 #x0 -- HighValue
    WRITE_RAM 32 #x7 $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #x8 #x0 -- Reserved
    -- Local 2
    WRITE_RAM 32 #x9 #xAABBCCDD -- LowValue
    WRITE_RAM 32 #xA #x0 -- HighValue
    WRITE_RAM 32 #xB $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #xC #x0 -- Reserved

    -- Start address of current stack frame
    WRITE_FPGA 32 $STACKBLK_ADR_StackAddressReg #xD

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_LocalGet
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_LocalIndexReg #x1
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 1000

    -- Start address of current stack frame stays the same
    VERIFY_FPGA 32 $STACKBLK_ADR_StackAddressReg WB_VALUE #x0D #xFF

    -- Local 1 on stack
    VERIFY_RAM 32 #x0D WB_VALUE #x44556677 #xFF -- LowValue
    VERIFY_RAM 32 #x0E WB_VALUE #x0 #xFF -- HighValue
    VERIFY_RAM 32 #x0F WB_VALUE $STACKBLK_VAL_i32 #xFF -- TypeValue
    VERIFY_RAM 32 #x10 WB_VALUE #x0 #xFF -- Reserved

    -- Local 1 provided to registers
    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #x44556677 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #x0 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_LocalIndexReg WB_VALUE #x1 #xFFFFFFFF

    RETURN_CALL
END_SUB


TEST_LOCAL_GET_64_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_LOCAL_GET_64_BIT"

    -- Current Activation Frame
    WRITE_RAM 32 #x0 #x0 -- ModuleInstanceUid
    -- Local 0
    WRITE_RAM 32 #x1 #x11223344 -- LowValue
    WRITE_RAM 32 #x2 #x55667788 -- HighValue
    WRITE_RAM 32 #x3 $STACKBLK_VAL_i64 -- TypeValue
    WRITE_RAM 32 #x4 #x0 -- Reserved
    -- Local 1
    WRITE_RAM 32 #x5 #x44556677 -- LowValue
    WRITE_RAM 32 #x6 #xAA55AA55 -- HighValue
    WRITE_RAM 32 #x7 $STACKBLK_VAL_i64 -- TypeValue
    WRITE_RAM 32 #x8 #x0 -- Reserved
    -- Local 2
    WRITE_RAM 32 #x9 #xAABBCCDD -- LowValue
    WRITE_RAM 32 #xA #x0 -- HighValue
    WRITE_RAM 32 #xB $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #xC #x0 -- Reserved

    -- Start address of current stack frame
    WRITE_FPGA 32 $STACKBLK_ADR_StackAddressReg #xD

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_LocalGet
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_LocalIndexReg #x1
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 1000

    -- Start address of current stack frame stays the same
    VERIFY_FPGA 32 $STACKBLK_ADR_StackAddressReg WB_VALUE #x0D #xFF

    -- Local 1 on stack
    VERIFY_RAM 32 #x0D WB_VALUE #x44556677 #xFF -- LowValue
    VERIFY_RAM 32 #x0E WB_VALUE #xAA55AA55 #xFF -- HighValue
    VERIFY_RAM 32 #x0F WB_VALUE $STACKBLK_VAL_i64 #xFF -- TypeValue
    VERIFY_RAM 32 #x10 WB_VALUE #x0 #xFF -- Reserved

    -- Local 1 provided to registers
    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #x44556677 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #xAA55AA55 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i64 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_LocalIndexReg WB_VALUE #x1 #xFFFFFFFF

    RETURN_CALL
END_SUB


TEST_LOCAL_SET_32_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_LOCAL_SET_32_BIT"

    -- Current Activation Frame
    WRITE_RAM 32 #x0 #x0 -- ModuleInstanceUid
    -- Local 0
    WRITE_RAM 32 #x1 #x11223344 -- LowValue
    WRITE_RAM 32 #x2 #x0 -- HighValue
    WRITE_RAM 32 #x3 $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #x4 #x0 -- Reserved
    -- Local 1
    WRITE_RAM 32 #x5 #x44556677 -- LowValue
    WRITE_RAM 32 #x6 #x0 -- HighValue
    WRITE_RAM 32 #x7 $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #x8 #x0 -- Reserved
    -- Local 2
    WRITE_RAM 32 #x9 #xAABBCCDD -- LowValue
    WRITE_RAM 32 #xA #x0 -- HighValue
    WRITE_RAM 32 #xB $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #xC #x0 -- Reserved
    -- First Value on Stack
    WRITE_RAM 32 #xD #xAABBCCDD -- LowValue
    WRITE_RAM 32 #xE $STACKBLK_VAL_i32 -- TypeValue

    -- Start address of current stack frame
    WRITE_FPGA 32 $STACKBLK_ADR_StackAddressReg #xF

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_LocalSet
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_LocalIndexReg #x1
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 1000

    -- Start address of current stack frame stays the same
    VERIFY_FPGA 32 $STACKBLK_ADR_StackAddressReg WB_VALUE #x0D #xFF

    -- Local 1 provided to registers
    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #xAABBCCDD #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #x0 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i32 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_LocalIndexReg WB_VALUE #x1 #xFFFFFFFF

    RETURN_CALL
END_SUB


TEST_LOCAL_SET_64_BIT:
BEGIN_SUB
    MESSAGE 0 "TEST_LOCAL_SET_64_BIT"

    -- Current Activation Frame
    WRITE_RAM 32 #x0 #x0 -- ModuleInstanceUid
    -- Local 0
    WRITE_RAM 32 #x1 #x11223344 -- LowValue
    WRITE_RAM 32 #x2 #x0 -- HighValue
    WRITE_RAM 32 #x3 $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #x4 #x0 -- Reserved
    -- Local 1
    WRITE_RAM 32 #x5 #x44556677 -- LowValue
    WRITE_RAM 32 #x6 #xAA55AA55 -- HighValue
    WRITE_RAM 32 #x7 $STACKBLK_VAL_i64 -- TypeValue
    WRITE_RAM 32 #x8 #x0 -- Reserved
    -- Local 2
    WRITE_RAM 32 #x9 #xAABBCCDD -- LowValue
    WRITE_RAM 32 #xA #x0 -- HighValue
    WRITE_RAM 32 #xB $STACKBLK_VAL_i32 -- TypeValue
    WRITE_RAM 32 #xC #x0 -- Reserved
    -- First Value on Stack
    WRITE_RAM 32 #xD #xAABBCCDD -- LowValue
    WRITE_RAM 32 #xE #x11223344 -- HighValue
    WRITE_RAM 32 #xF $STACKBLK_VAL_i64 -- TypeValue

    -- Start address of current stack frame
    WRITE_FPGA 32 $STACKBLK_ADR_StackAddressReg #x10

    EQU_VAR WB_VALUE $STACKBLK_VAL_DoRun
    OR_VAR WB_VALUE $STACKBLK_VAL_LocalSet
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $STACKBLK_ADR_LocalIndexReg #x1
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $STACKBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $STACKBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 1000

    -- Start address of current stack frame stays the same
    VERIFY_FPGA 32 $STACKBLK_ADR_StackAddressReg WB_VALUE #x0D #xFF

    -- Local 1 provided to registers
    VERIFY_FPGA 32 $STACKBLK_ADR_LowValueReg WB_VALUE #xAABBCCDD #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_HighValueReg WB_VALUE #x11223344 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_TypeReg WB_VALUE $STACKBLK_VAL_i64 #xFFFFFFFF
    VERIFY_FPGA 32 $STACKBLK_ADR_LocalIndexReg WB_VALUE #x1 #xFFFFFFFF

    RETURN_CALL
END_SUB


INCLUDE "Defines.stm"
INCLUDE "../hxs_gen/simstm_gen/indirect/wasm_fpga_stack_indirect.stm"
